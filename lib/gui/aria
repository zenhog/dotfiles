#!/usr/bin/env bash

KEY=d
MOD='S-M'
ICON=

HORIZONTAL=1

ctl() {
  # remove forceRemove
  # add
  # pause forcePause
  # pause-all forcePauseAll
  #
  local -A methods=(
    [add]=addUri
    [del]=remove
    [Del]=forceRemove
    [dela]=
    )

  case "$kind" in
    add)
      ;;
    del)
      ;;
    toggle)
      ;;
    toggleAll)
      ;;
    stats)
      ;;

  esac
}

query() {
  local query params method="$1"
  local URL=http://localhost:6800/jsonrpc

  shift

  if [[ -n "$*" ]]; then
    read -r params < <(IFS=,; printf "%s" "$*")
    params="\"params\": [ $params ]"
  fi

  read -r -d '' query << EOF
  {
    "jsonrpc": "2.0",
    "id": "menu",
    "method": "$method",
    $params
  }
EOF

echo "$query"

  curl -sL -X POST -H 'Content-Type: application/json' -d "$query" "$URL" |
    jq -r '.result'
}

request() {
  local method="$1"
  local gid="$2"

  shift 2

  case "$method" in
    stats)
      query aria2.getGlobalStat
      ;;
    status)
      query aria2.tellStatus "$gid"
      ;;
    list)
      local numWaiting numStoppedTotal

      IFS=$'\n' read -r -d '' numWaiting numStoppedTotal < <(
        query aria2.getGlobalStat | jq -r '(.numWaiting, .numStoppedTotal)'
      )

      jq -n 'reduce inputs as $in
        (null; . + if $in|type == "array" then $in else [$in] end)' < <(
        query aria2.tellActive
        query aria2.tellWaiting 0 "$numWaiting"
        query aria2.tellStopped 0 "$numStoppedTotal"
      )
      ;;
    count)
      query aria2.getGlobalStat | jq -r '.numActive'
      ;;
    files)
      query aria2.getFiles "$gid"
      ;;
    pause)
      query aria2.pause "$gid"
      ;;
    pauseAll)
      query aria2.pauseAll
      ;;
    unpause)
      query aria2.unpause "$gid"
      ;;
    unpauseAll)
      query aria2.unpauseAll
      ;;
    add)
      local uri="$gid"
      query aria2.addUri "$uri"
      ;;
    del)
      query aria2.remove "$gid"
      ;;
    rm)
      query aria2.forceRemove "$gid"
      ;;
    getgopt)
      query aria2.getGlobalOption
      ;;
    setgopt)
      local opts=("$@")
      query aria2.changeGlobalOption "${opts[@]}"
      ;;
    getopt)
      query aria2.getOption "$gid"
      ;;
    setopt)
      local opts=("$@")
      query aria2.changeOption "$gid" "${opts[@]}"
      ;;
  esac
}


view() {
  :
}

label() {
  declare -A -x -g STATS

  local -a values
  local -a keys=(
    downloadSpeed
    uploadSpeed
    numActive
    numStopped
    numStoppedTotal
    numWaiting
  )

  readarray -t values < \
    <(request stats | jq -r "$(IFS=,; printf '%s' "${keys[*]/#/.}")")

  for i in $(seq 0 $((${#values[@]} -1))); do
    if [[ "${keys[$i]}" == *Speed ]]; then
      values[$i]="$(numfmt --to=iec --suffix=B <<< "${values[$i]}")"
    fi
    STATS[${keys[$i]}]="${values[$i]}"
  done

  printf "  %s/s  %s/s 󰧩 %s 󰒲 %s 󰙧 %s 󱕱 %s " "${values[@]}"
  export "$(declare -p STATS)"
}

list() {
  # [GID] TYPE? STATUS completedLength/totalLength uploadedLength dSpeed/dMaxSpeed uSpeed/uMaxSpeed
  # #numpieces 
  local flatkey
  local values
  local keys=(
    .gid
    .status
    .completedLength
    .totalLength
    .uploadLength
    .connections
    .downloadSpeed
    .uploadSpeed
    '.files.[0].path'
  )

  read -r flatkey < <(IFS=,; printf '%s' "${keys[*]}")

  request list | jq -r ".[] | (${flatkey})"

  # printf "%s %s %s %s\n" "${values[@]}"
}

BINDS[del]=alt-d
DESCS[del]='Delete entry'
del() {
  local gid
  read -r gid _ <<< "$1"
  request del "$gid"
}

BINDS[toggle]=alt-t
DESCS[toggle]='Toggle pause'
toggle() {
  local gid
}

refresh() {
  local gid
}

inc_uspeed() {
  local gid
}

dec_uspeed() {
  local gid
}

inc_dspeed() {
  local gid
}

dec_dspeed() {
  local gid
}
