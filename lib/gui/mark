#!/usr/bin/env bash

KEY=u
MOD='S-M'
ICON=ï‘¡
COLOR=firebrick

HORIZONTAL=1
NOWRAP=1
RATIO=20%

export DB="$HOME/.db/marks.db"
export SQL="${DB%.db}.sql"

initdb() {
	sqlite3 "$DB" <<EOF
    CREATE TABLE IF NOT EXISTS bookmarks (
      url TEXT PRIMARY KEY,
      title TEXT NOT NULL
    );
    CREATE INDEX bookmarks_index ON bookmarks (title);
EOF
}

insert() {
	local url="$1"
	local title="$2"

  if [[ "$title" == @* ]]; then
    title="${title#@}"
  else
    read -r url < <(sed -E 's/[#?].*//g' <<< "$url")
    read -r url < <(sed -E 's/\/$//' <<< "$url")
  fi

	sqlite3 "$DB" "
    INSERT INTO bookmarks (url, title)
    VALUES ('$url', '$title')
  "
}

view() {
  :
}

label() {
	local url
  read -r url _ <<<"$1"
  printf " [%s] " "$url"
}

OPTS=(--with-nth 2.. --header-lines=1 --preview-window=hidden)
list() {
	sqlite3 -separator "$iSEP" "$DB" "SELECT url, title FROM bookmarks" |
		column -t -s "$iSEP" | column -t -l 3 -N URL,CATEGORY,TITLE
}

BINDS[open]=enter
HOOKS[open]=accept
DESCS[open]='Open bookmark'
open() {
	local url
	read -r url _ <<<"$1"
	command open "$url"
}

BINDS[_open]=alt-enter
HOOKS[_open]=clear
DESCS[_open]='Open bookmark with vpnfox'
_open() {
	local url
	read -r url _ <<<"$1"
  urlopen "$url"
}

BINDS[bgopen]=tab
HOOKS[bgopen]=noclear
DESCS[bgopen]='Open bookmark in the background with vpnfox'
bgopen() {
	open "$@"
}

BINDS[copy]=alt-c
DESCS[copy]='Clipboard bookmark URL'
copy() {
	local url

	read -r url _ <<<"$1"

	tmux load-buffer - <<<"$url"
}

check() {
	local url

  read -r url < <(sqlite3 "$DB" "SELECT url FROM bookmarks WHERE url == '$1'")

  [[ -n "$url" ]]
}

BINDS[rm]=alt-d
HOOKS[rm]=noclear
DESCS[rm]='Delete bookmark'
rm() {
	local url

	read -r url _ <<<"$1"

	sqlite3 "$DB" "DELETE FROM bookmarks WHERE url == '$url'"
}

BINDS[mod]=alt-w
HOOKS[mod]=sclear
DESCS[mod]='Rename bookmark'
mod() {
	local url title

	read -r url title <<< "$1"

  read -r title < <(sed -E 's/ +/ /g' <<< "$title")

  echo -n "$title" | tmux load-buffer -

  (
    echo "$title"
    sepline
    list | awk '{print $2}' | sort -u | column -x
  ) | tmux load-buffer -b preview -

	read -r title < <(input preview="'$preview'" label="' [$url] '")

	if [[ -n "$title" ]]; then
		sqlite3 "$DB" \
			"UPDATE bookmarks SET title = '${title}' WHERE url == '$url'"
	fi
}

add() {
	local url="$1" title="$2" mytitle

	if check "$url"; then
		notify "'$url' already exists"
		return 1
	fi

  (
    echo "$title"
    sepline
    list | awk '{print $2}' | sort -u | column -x
  ) | tmux load-buffer -b preview -

	read -r mytitle < <(menu input label="' [$url] '" ghost=@)

	[[ -z "$mytitle" ]] && return

	[[ "$mytitle" == @ ]] && mytitle="$title"

	insert "$url" "$mytitle"

	if check "$url"; then
		notify "Added '$url'"
	else
		notify "Failed to add '$url'"
	fi
}

del() {
	local url="$1"

	if check "$url"; then
		sqlite3 "$DB" "DELETE FROM bookmarks WHERE url == '$url'"
		if check "$url"; then
			notify "Failed to delete '$url'"
		else
			notify "Deleted '$url'"
		fi
	else
		notify "'$url' does not exist"
	fi
}
