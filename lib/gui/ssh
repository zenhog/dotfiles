#!/usr/bin/env bash

KEY=e
MOD='S-M'
ICON=ï’‰

export MUXSOCK="$HOME/.vmux.S"
export SOCKDIR="$HOME/.sockets"
export HOSTDIR="$HOME/.ssh/hosts"

export URL=https://raw.githubusercontent.com/zenhog/dotfiles/master/bin/dotfiles

function view() {
  local hostfile
  read -r hostfile < <(ansifilter <<< "$1")
  echo "$HOSTDIR/$hostfile"
  sepline
  preview "$HOSTDIR/$hostfile"
}

function list() {
  local hosts
  readarray -t hosts < <(cd "$HOSTDIR" && find * -type f)

  for host in "${hosts[@]}"; do
    if connected "$host"; then
      host="$(ansi --green "$host")"
    fi
    printf "%s\n" "$host"
  done
}

function get() {
  local kind="$1" namespace host sock

  IFS=$'/\n' read -r namespace host _ < <(ansifilter <<< "$2")

  [[ "$kind" == host ]] && echo "$namespace/$host"
  [[ "$kind" == sock ]] && echo "$SOCKDIR/$host.$namespace.S"
}

function connected() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"

  mute ssh -S "$sock" -O check "$host"
}

BINDS[toggle]=tab
DESCS[toggle]='Toggle ssh master connection'
function toggle() {
  local host="$(get host "$1")"

  if connected "$host"; then
    disconnect "$1"
  else
    connect "$1"
  fi
}

function connect() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"

  if [[ -n "$SSH_CONNECTION" ]] || connected "$host"; then
    return
  fi

  rm -f "$sock"

  timeout 2 ssh -fMNS "$sock" "$host" || exit 1
}

function disconnect() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"

  if connected "$host"; then
    ssh -S "$sock" -O cancel "$host"
    ssh -S "$sock" -O exit   "$host"
  fi
}

function revport() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"

  if connected "$host"; then
    ssh -S "$sock" -O forward -R "localhost:0:$MUXSOCK" "$host"
  fi
}

function cancel() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"

  if connected "$host"; then
    ssh -S "$sock" -O cancel "$host"
  fi
}

BINDS[mux]=enter
HOOKS[mux]=accept
DESCS[mux]='Attach a tmux session'
function mux() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"
  local name="${host##*/}"

  attach fg "$name" "$host"
}

function attach() {
  local mode="$1"
  local name="$2"
  local host="$3"

  gui tmux mod "$mode" attach remote "$name" "$host"
}

BINDS[shell]='alt-enter'
HOOKS[shell]=accept
DESCS[shell]='Open a new shell window in tmux'
function shell() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"
  local name="${host##*/}"

  if connected "$host"; then
    gui tmux window local "$(hostname)" "$name" \
      ssh -S "$sock" -t "$host" zsh -il
  fi
}

function mount() {
  local host="$(get host "$1")"

  mkdir -p "$HOME/.sshfs/$host"

  sshfs "$host":'$HOME' "$HOME/.sshfs/$host"
}

#function goto() {
#  mount && cd
#}

#function authorize() {
#  ssh-copy-id ???
#}

function ttyexec() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"

  shift

  #connect "$host" && ssh -S "$sock" -t "$host" bash -lc "'$*'"
  if connected "$host"; then
    exec ssh -S "$sock" -t "$host" bash -lc "$(printf " %q" "$*")"
  fi
}

function rexec() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"

  shift

  #connect "$host" && ssh -S "$sock" "$host" bash -lc "'$*'"
  #connect "$host" && ssh -S "$sock" "$host" bash -ls < <(printf " %q" "$@")

  if connected "$host"; then
    ssh -S "$sock" "$host" bash -ls <<< "${@@Q}"
  fi
}

function sync() {
  local host="$(get host "$1")"
  local sock="$(get sock "$1")"

  local cmd

  read -r cmd < <(printf '<(curl -sL %s)' "$URL")

  cmd=(bash "$cmd" install master)

  local temp="$(mktemp --dry-run)"

  if connected "$host"; then
    ssh -S "$sock" "$host" bash -ls << EOF
    curl -sSL "$URL" -o "$temp"
    if bash "$temp" install master; then
      bash "$temp" pull master
    fi
    rm -f "$temp"
EOF
  fi
}
