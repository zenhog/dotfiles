#!/usr/bin/env bash

KEY=f
MOD='S-M'
ICON=󰴽

# HORIZONTAL=1
PREVIEW_LABEL_OFFSET=2
RATIO=60

label() {
	local mode="$(get_opt mode)"

	echo " mode: $mode "
}

previewlabel() {
	local mode="$(get_opt mode)"

	echo " $(dolist "$mode-header") "
}

init() {
	set_opt mode connections
}

dolist() {
	local kind="$1"

	case "$kind" in
	ssids)
		nmcli -c yes -s -f ACTIVE,BSSID,SSID,CHAN,RATE,SIGNAL,FREQ,SECURITY \
			device wifi list --rescan yes | tail +2
		;;
	ssids-header)
		nmcli -c yes -f ACTIVE,BSSID,SSID,CHAN,RATE,SIGNAL,FREQ,SECURITY \
			device wifi list --rescan yes | head -1 | tr ' ' '–'
		;;
	connections)
		sudo nmcli -c yes -s -f ACTIVE,UUID,NAME,TYPE,AUTOCONNECT,AUTOCONNECT-PRIORITY \
			connection show | tail +2
		;;
	connections-header)
		nmcli -c yes -f ACTIVE,UUID,NAME,TYPE,AUTOCONNECT,AUTOCONNECT-PRIORITY \
			connection show | head -1 | tr ' ' '–'
		;;
  SSID)
    nmcli -c no -s -m multiline -f \
      ACTIVE,BSSID,SSID,CHAN,RATE,SIGNAL,FREQ,SECURITY \
      device wifi list --rescan yes
    ;;
  CONN)
    nmcli -c no -s -m multiline -f \
      ACTIVE,UUID,NAME,TYPE,AUTOCONNECT,AUTOCONNECT-PRIORITY \
      connection show
    ;;
	esac
}
BINDS[rescan]=alt-r
DESCS[rescan]='Rescan'
reload() {
	sudo nmcli device wifi rescan
  # type: conn/wifi
  # new:
    # ethernet id eth0 prio ipv6?
    # wifi id wlan0 prio ssid psk
    # hotspot
  # connect:
    # wifi id wlan0 prio ssid psk
}

view() {
	local mode="$(get_opt mode)"

	local active id

	read -r active id _ <<<"$1"

	case "$mode" in
	connections)
		sudo nmcli --show-secrets con show "$id"
		;;
	ssids)
		nmcli con show "$id"
		;;
	esac
}

BINDS[del]=alt-d
HOOKS[del]=clear
DESCS[del]='Delete connection'
del() {
	local active id
  read -r _ id _ <<< "$1"

  sudo nmcli connection delete "$id"
}

BINDS[open]=enter
HOOKS[open]=clear
DESCS[open]='Toggle connection or wifi'
open() {
	local mode="$(get_opt mode)"

	local active id

	read -r active id _ <<<"$1"

	case "$mode" in
	connections)
		case "$active" in
		yes) sudo nmcli con down "$id" ;;
		no) sudo nmcli con up "$id" ;;
		esac
		;;
	ssids)
		case "$active" in
		yes) sudo nmcli con down "$id" ;;
		no) sudo nmcli con up "$id" ;;
		esac
		;;
	esac
}

OPTS+=(--with-nth 3..)
list() {
  (
  while IFS=$'\t: ' read -r key val; do
    values+=("$val")
    if [[ "$key" == SECURITY ]]; then
      printfmt "${values[0]}" "${values[1]}" cast "${values[@]:2}"
      unset values
    fi
  done < <(dolist SSID)

  # 802-11-wireless.ssid
  # 802-11-wireless.bssid
  # 802-11-wireless-security.psk
  # 802-11-wireless-security.key_mgmt
  #
  # name ethernet/wifi ifname autoconnect prio ssid psk bssid
 
  local -A values
  local ssid bssid psk mgmt keys=(
    802-11-wireless.ssid
    802-11-wireless.bssid
    802-11-wireless-security.psk
    802-11-wireless-security.key-mgmt
  )

  while IFS=$'\t: ' read -r key val; do
    values[$key]="$val"
    if [[ "$key" == AUTOCONNECT-PRIORITY ]]; then
      IFS=$'\n' read -r -d '' ssid bssid psk mgmt < <(sudo nmcli -c no -s -f \
        "$(IFS=,; printf "%s" "${keys[*]}")" con show "${values[UUID]}" |
        awk '{print $2}'
      )

      printfmt \
        "${values[ACTIVE]}" \
        "${values[UUID]}" \
        "${values[TYPE]/ethernet/eth}" \
        "$ssid" \
        "${values[NAME]}" \
        "$mgmt" \
        "${values[AUTOCONNECT]}" \
        "${values[AUTOCONNECT-PRIORITY]}"
      values=()
    fi
  done < <(dolist CONN)
  ) | column -t -s "$iSEP"
}

BINDS[rotate_mode]=alt-t
HOOKS[rotate_mode]=clear
DESCS[rotate_mode]='Rotate mode'
rotate_mode() {
	local mode="$(get_opt mode)"

	case "$mode" in
	connections) set_opt mode ssids ;;
	ssids) set_opt mode connections ;;
	esac
}
