#!/usr/bin/env bash

KEY=w
MOD='S-M'
ICON=ó°ˆ­
COLOR=gold

HORIZONTAL=1

export DB="$HOME/.db/vocabulary.db"

export DICT_API_URL="https://api.dictionaryapi.dev/api/v2/entries/en"

translate() {
  local sl="$1"
  local dl="$2"
  local text="$(jq -rR @uri <<< "${*:3}")"

  local endpoint='https://ftapi.pythonanywhere.com'
  local query

  read -r query < <(printf '%s/translate?sl=%s&dl=%s&text=%s' \
    "$endpoint" "$sl" "$dl" "$text"
  )

  curl -sSL "$query" #| yq -y | bat -p --force-colorization --language yaml
}

muse() {
  local endpoint='https://api.datamuse.com'

  local query

  read -r query < <(IFS=+; printf "%s/words?ml=%s\n" "$endpoint" "$*")

  echo "$query"

  curl -sSL "$query" #| yq -y | bat -p --force-colorization --language yaml
}

lookup() {
  local word="$1"
  local endpoint="https://api.dictionaryapi.dev/api/v2/entries/en"

  curl -sSL "$endpoint/$word" #|
    # yq -y | bat -p --force-colorization --language yaml

}

# - link to https://dictionary.cambridge.org/dictionary/english/$WORD

# add word
# del word
# quiz #num
# make the call and cache it

apicall() {
  local cache="$HOME/.cache/gui/vocab"
  local api="$1"

  shift

  mkdir -p "$cache/$api"

  local path

  read -r path < <(IFS=_; printf "%s/%s" "$cache/$api" "$*")

  [[ -f "$path" ]] && cat "$path" || "$api" "$@" | tee "$path"
}

noinit() {
	rm -f "$DB"
	sqlite3 "$DB" <<EOF
  CREATE TABLE words(
    id integer primary key,
    word_en text unique,
    word_fr text,
    word_es text,
    word_ar text,
    word_ru text,
    word_ja text,
    learnt boolean
  );
EOF
}

view() {
	local id word
	read -r id word _ <<<"$1"

  apicall lookup "$word"
}

OPTS+=(--with-nth 2..)
list() {
	# @menu-word-language fr|en
	# @menu-word-hidden 1|0
	sqlite3 -separator "$iSEP" "$DB" \
		'SELECT id, word_en, word_fr, word_es, word_ar, word_ru FROM words WHERE learnt == false' |
		sort -t "$iSEP" -k2 | column -t -s "$iSEP"
}

dump() {
	sqlite3 "$DB" "SELECT word_en FROM words"
}

BINDS[pronounce]=alt-p
DESCS[pronounce]='Pronounce word'
pronounce() {
	local id word links
	read -r id word _ <<<"$1"
	readarray -t links < <(curl -sL "${API}/${word}" |
		jq -r '.[].phonetics.[].audio')

	for link in "${links[@]}"; do
		[[ "$link" =~ ^http ]] || link="https:${link}"
		mpv "$link"
	done
}

BINDS[add]=enter
DESCS[add]='Add word to vocabulary database'
add() {
	#local word language domain
	local words

	read -r -a words <<< "$2"

	for word in "${words[@]}"; do
		local word_fr
    read -r word_fr < <(apicall translate en fr "$word")
		sqlite3 "$DB" "
      INSERT INTO words (word_en, word_fr, learnt)
      values ('${word}', '${word_fr}', false)
    "
	done
}

BINDS[del]=alt-d
DESCS[del]='Delete word'
del() {
	local id
	read -r id _ <<<"$1"
	sqlite3 "$DB" "DELETE FROM words WHERE id == ${id}"
}
