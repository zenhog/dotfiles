#!/usr/bin/env bash

KEY=
MOD='S-M'
ICON=

NOWRAP=1

atfinish() {
    rm -f "$INPUT"
}

declare -Ax PATTERNS=()

declare -ax GR_LINES=(LINE)

PATTERNS[LINE]='^.*$'

declare -ax GR_QUOTES=(SINGLE_QUOTE DOUBLE_QUOTE BACK_QUOTE)

PATTERNS[SINGLE_QUOTE]="'([^']+)'"
PATTERNS[DOUBLE_QUOTE]='"([^"]+)"'
PATTERNS[BACK_QUOTE]='`([^`]+)`'

declare -ax GR_BRACKETS=(PARENTHESIS ANGLE_BRACKET SQUARE_BRACKET CURLY_BRACKET)

PATTERNS[PARENTHESIS]='(?:\(([^()]+)\))'
PATTERNS[ANGLE_BRACKET]='<([^<>]+)>'
PATTERNS[SQUARE_BRACKET]='\[([^\[\]]+)\]'
PATTERNS[CURLY_BRACKET]='\{([^{}]+)\}'

declare -ax GR_PAIRS=("${GR_QUOTES[@]}" "${GR_BRACKETS[@]}")

declare -ax GR_UIDS=(SHA IPFS UUID COLOR DOCKER)

PATTERNS[SHA]='[0-9a-f]{7,40}'
PATTERNS[IPFS]='Qm[0-9a-zA-Z]{44}'
PATTERNS[UUID]='[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
PATTERNS[COLOR]='#[0-9a-fA-F]{6}'
PATTERNS[DOCKER]='sha256:([0-9a-f]{64})'

declare -ax GR_NAMES=(DOTNAME EMAIL)

PATTERNS[EMAIL]='\S+@\S+\.\S+'
PATTERNS[DOTNAME]='[[:blank:]]((\w+\.)+\w+)'

declare -ax GR_URLS=(PATH URL MARKDOWN_URL)

PATTERNS[MARKDOWN_URL]='\[[^]]*\]\(([^)]+)\)'
PATTERNS[PATH]='(([.\w\-@~\[\]]+)?(/[.\w\-@\[\]]+)+)'
PATTERNS[URL]='(((http|https|ftp|gopher)|mailto):(\/\/)?[^ <>\"\t]*|(www|ftp)[0-9]?\\.[-a-z0-9.]+)[^ .,;\t\n\r<\">\\):]?[^, <>\"\t]*[^ .,;\t\n\r<\">\\):](\?[^ \t\n\r]+)?'

declare -ax GR_ARGS=(LONGOPT SHORTOPT)

PATTERNS[LONGOPT]='[[:blank:]]([-][-][-[:alnum:]]+)'
PATTERNS[SHORTOPT]='[[:blank:]]([-][-[:alnum:]]+)'

declare -ax GR_ADDRS=(IP4 IP6)

PATTERNS[IP4]='\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
PATTERNS[IP6]='[A-f0-9:]+:+[A-f0-9:]+[%\w\d]+'

declare -ax GR_NUMBERS=(NUM NUMCHAIN HEXNUM HEXSTR)

PATTERNS[NUM]='[0-9]{4,}'
PATTERNS[NUMCHAIN]='(([0-9]{4,})-)+[0-9]{4,}'
PATTERNS[HEXSTR]='[0-9a-fA-F]{7,128}'
PATTERNS[HEXNUM]='0x[0-9a-fA-F]+'

declare -ax GR_DIFFS=(DIFF_SUMMARY)

PATTERNS[DIFF_SUMMARY]='diff --git a/([.\w\-@~\[\]]+?/[.\w\-@\[\]]++) b/([.\w\-@~\[\]]+?/[.\w\-@\[\]]++)'

declare -ax GR_ALL=("${!PATTERNS[@]}")

declare -ax GROUPS=("$(set | awk -F= '/GR_/{print $1}')")

for gr in "${GROUPS[@]}"; do
  export "S${gr}"="$(declare -p "$gr")"
done

export SPATTERNS="$(declare -p PATTERNS)"
export SGROUPS="$(declare -p GROUPS)"

exit 0

function init() {
  [[ -n "$(get_opt group)" ]] || set_opt group ALL
}

function match() {
    local pattern="$1"
    local submatch_id=0

    eval "$SPATS"

    #[[ -n "$2" ]] && submatch_id="$2"

    [[ "$pattern" == CUSTOM ]] && PATTERNS[CUSTOM]="$2"

    sortcmd=(sort -b -u -k3 -t$'\x01')

    [[ "$pattern" == LINE ]] && sortcmd=(cat)

    while read -r line; do
        IFS=$':\n' read -r index rest <<< "$line"
        printf "%s\x01%s\x01%s\n" "$index" "$pattern" "$rest"
    done < <(rg -o -r "\$$submatch_id" -P -n "${PATTERNS[$pattern]}" "$INPUT") |
        column -t -s$'\x01' -o$'\x01' | "${sortcmd[@]}"
}

function list() {
  read -r SPATS < <(declare -p PATTERNS)
  export SPATS

  [[ $# -eq 0 ]] && set "${!PATTERNS[@]}"

  export INPUT="$(mktemp --suffix fzfgrep-$$)"

  ansifilter > "$INPUT"

  for pat in "$@"; do
    match "$pat"
  done | column -t -s$'\x01'

  #fzf --ansi --preview-window 'right,60%,wrap,+{1}-5' \
  #    --preview "rg --passthru --color=always -F -- {3..} < $INPUT" \
  #    --bind="enter:execute(echo -n {3..} | tmux load-buffer -)+accept" \
  #    --bind="tab:execute-silent(open {3..})" \
  #    --bind="ctrl-o:execute-silent(open {3..})+accept" \
  #    --bind="ctrl-/:reload-sync(match CUSTOM {q})" \
  #    --bind="ctrl-\\:execute-silent(open {3..})+accept" \
  #    --preview-label='enter:+clip ^\:clip tab:open' \
  #    --prompt='fzfgrep> '

}

function view() {
  rg --passthru --color=always -F -- {3..} < "$INPUT"
}
