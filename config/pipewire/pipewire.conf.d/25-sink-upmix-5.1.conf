
# An example of a stereo sink that will use the stream upmixing
# logic to create a 5.1 output.
context.modules = [
    {   name = libpipewire-module-loopback
        args = {
            node.description = "Stereo to 5.1 upmix"
            # global audio position makes sure capture and playback streams
            # are converted to this intermediate format
            audio.position = [ FL FR ]
            capture.props = {
                node.name = "sink.upmix_5_1"
                media.class = "Audio/Sink"
            }
            playback.props = {
                node.name = "playback.upmix-5.1"
                # from the internal stereo to this will trigger upmix
                audio.position = [ FL FR FC LFE RL RR]
                # where to link this to
                target.object = "alsa_output.usb-0d8c_USB_Sound_Device-00.analog-surround-51"
                # Makes sure the output channels stay as configured rather than matching
                # target.object
                stream.dont-remix = true
                # Prevents this loopback module from being processed (and possibly keeping
                # CPU at a higher power state) when its not linked to clients
                node.passive = true

                # enable channel upmix
                channelmix.upmix = true
                # use fancy filters and delay in the rear channels
                channelmix.upmix-method = psd  # none, simple
                # filter for the LFE channel
                channelmix.lfe-cutoff = 150
                # filter for the FC channel
                channelmix.fc-cutoff  = 12000
                # delay in rear channels
                channelmix.rear-delay = 12.0
                # optionally widen the stereo field
                channelmix.stereo-widen = 0.0
                # optionally apply a hilbert transform (90 degree phase shift) on
                # the rear channels to improve spacialization
                channelmix.hilbert-taps = 0
            }
        }
    }
]
