#!/usr/bin/env bash

function map() {
  local keymap="${1?}"
  local bind="${2?}"
  local cmd=("${@:3}")

  tmux bind -T "$keymap" "$bind" "${cmd[@]}"
}

function mapmux() {
  map "$1" "$2" run "gui tmux dmux ${*:3}"
}

function mapcmd() {
  map "$1" "$2" run "gui tmux ${*:3}"
}

function mapmenu() {
  map "$1" "$2" run "menu popup ${*:3} || true"
}

# maps all the menus
function mapmenus() {
  local menulines

  readarray -t menulines < <(gui)

  for line in "${menulines[@]}"; do
    local name mod key

    IFS=: read -r _ name mod key <<< "$line"

    case "$key" in
      BackSpace) key=bspace ;;
    esac

    mapmenu local "M-${key^^}" "$name"
  done
}

# clear all key-tables to avoid surprises
# ignore builtin key-tables if load latency becomes an issue

tmux unbind -aT root
tmux unbind -aT prefix
tmux unbind -aT copy-mode
tmux unbind -aT copy-mode-vi

tmux unbind -aT local
#tmux unbind -aT menu
#tmux unbind -aT send
tmux unbind -aT resize

mapmenus

# setup a single passthrough binding to create the menu key-table
# map menu 'M-Escape' switch-client -T local

muxmap local 'M-BSpace' send-prefix

map local M-d detach-client
map local 'M->' switch-client -n
map local 'M-<' switch-client -p
map local 'M-\;' command-prompt

mapcmd local 'M-\' copytk
mapcmd local 'M-Escape' extract-pane
mapcmd local 'M-BSpace' paste-buffer

mapcmd local M-w list-windows
mapcmd local M-s list-sessions
mapcmd local M-a list-panes
mapcmd local M-x list-buffers

mapcmd local M-p lastcmd

mapcmd copy-mode M-p prevcmd
mapcmd copy-mode M-n nextcmd
mapcmd copy-mode M-a cursor

mapmux local M-z display-panes
mapmux local M-i rotate-window -D

mapmux local 'M-?' list-keys
mapmux local 'M-:' reload

mapmux local M-o paste-buffer
mapmux local M-b show-messages
mapmux local M-f resize-pane -Z

mapmux local M-Enter new-window
mapmux local M-q kill-pane

mapmux local M-. next-window
mapmux local M-, previous-window
mapmux local M-Tab select-pane -t :.+

mapmux local M-r split-window -h -c '#{pane_current_path}'
mapmux local M-t split-window -v -c '#{pane_current_path}'

mapmux local M-1 select-window -t :=1
mapmux local M-2 select-window -t :=2
mapmux local M-3 select-window -t :=3
mapmux local M-4 select-window -t :=4
mapmux local M-5 select-window -t :=5
mapmux local M-6 select-window -t :=6
mapmux local M-7 select-window -t :=7
mapmux local M-8 select-window -t :=8
mapmux local M-9 select-window -t :=9
mapmux local M-0 select-window -t :=10

mapmux local 'M-!' join-pane -h -t 1
mapmux local 'M-@' join-pane -h -t 2
mapmux local 'M-#' join-pane -h -t 3
mapmux local 'M-$' join-pane -h -t 4
mapmux local 'M-%' join-pane -h -t 5
mapmux local 'M-^' join-pane -h -t 6
mapmux local 'M-&' join-pane -h -t 7
mapmux local 'M-*' join-pane -h -t 8
mapmux local 'M-(' join-pane -h -t 9
mapmux local 'M-)' join-pane -h -t 10

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

mapmux local 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
mapmux local 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
mapmux local 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
mapmux local 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

mapmux local M-c copy-mode
mapmux local M-u copy-mode -u

cmdmap local M-p lastcmd

# resize-mode mappings

mapmux local 'M-g' switch-client -T resize-mode

mapmux resize-mode 1 select-layout even-horizontal '\;' switch-client -T resize-mode
mapmux resize-mode 2 select-layout even-vertical '\;' switch-client -T resize-mode
mapmux resize-mode 3 select-layout local-horizontal '\;' switch-client -T resize-mode
mapmux resize-mode 4 select-layout local-vertical '\;' switch-client -T resize-mode
mapmux resize-mode 5 select-layout tiled '\;' switch-client -T resize-mode

mapmux resize-mode h resize-pane -L '\;' switch-client -T resize-mode
mapmux resize-mode l resize-pane -R '\;' switch-client -T resize-mode
mapmux resize-mode j resize-pane -D '\;' switch-client -T resize-mode
mapmux resize-mode k resize-pane -U '\;' switch-client -T resize-mode

mapmux resize-mode H resize-pane -L 5 '\;' switch-client -T resize-mode
mapmux resize-mode L resize-pane -R 5 '\;' switch-client -T resize-mode
mapmux resize-mode J resize-pane -D 5 '\;' switch-client -T resize-mode
mapmux resize-mode K resize-pane -U 5 '\;' switch-client -T resize-mode

mapmux resize-mode q switch-client -T local
mapmux resize-mode 'M-=' switch-client -T local
mapmux resize-mode Escape switch-client -T local

# copy mode mappings

mapmux copy-mode q send-keys -X cancel
mapmux copy-mode v send-keys -X begin-selection
mapmux copy-mode Enter send-keys -X copy-selection-and-cancel

mapmux copy-mode k send-keys -X cursor-up
mapmux copy-mode j send-keys -X cursor-down
mapmux copy-mode h send-keys -X cursor-left
mapmux copy-mode l send-keys -X cursor-right

mapmux copy-mode w send-keys -X next-word
mapmux copy-mode e send-keys -X next-word-end
mapmux copy-mode b send-keys -X previous-word

mapmux copy-mode W send-keys -X next-space
mapmux copy-mode E send-keys -X next-space-end
mapmux copy-mode B send-keys -X previous-space

mapmux copy-mode '[' send-keys -X previous-paragraph
mapmux copy-mode ']' send-keys -X next-paragraph

mapmux copy-mode '0' send-keys -X start-of-line
mapmux copy-mode '$' send-keys -X end-of-line

mapmux copy-mode g send-keys -X history-top
mapmux copy-mode G send-keys -X history-bottom

mapmux copy-mode n send-keys -X search-again
mapmux copy-mode N send-keys -X search-reverse

mapmux copy-mode v rectangle-toggle
mapmux copy-mode c pipe-and-cancel load-buffer -

mapmux copy-mode '/' command-prompt "send-keys -X search-forward '%%'"
mapmux copy-mode '?' command-prompt "send-keys -X search-backward '%%'"

mapmux copy-mode u send-keys -X page-up
mapmux copy-mode d send-keys -X page-down

mapmux copy-mode M-u send-keys -X page-up
mapmux copy-mode M-d send-keys -X page-down
