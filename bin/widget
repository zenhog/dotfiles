#!/usr/bin/env bash

shopt -s extdebug

MODULES_DIR="$HOME/.lib/widget"

declare -A KEYS

prev() {
	:
}

next() {
	:
}

toggle() {
	:
}

colorize() {
	tty -s && pastel -f paint "$1" "${@:2}" ||
		printf '<span foreground="%s">%s</span>' "$1" "${*:2}"
}

sanitize() {
	sed -e 's/&/\&amp;/gp'
}

fmt() {
	local num="$1"

	if ! [[ "$num" =~ ^[0-9]+$ ]]; then
		printf "--"
		return
	fi

	local decpart="$((num % 10))"
	local hexpart="$((num / 10))"
	local hex="$(printf "%X" "$hexpart")"

	if ((hexpart == 0)); then
		printf "%02d" "$decpart"
		return
	elif ((${#hex} > 1)); then
		printf "++"
		return
	else
		printf "%s%d" "$hex" "$decpart"
	fi
}

run() {
	gui "${BASH_ARGV[1]}" &>/dev/null && menu "${BASH_ARGV[1]}"
}

period() {
	echo "${PERIOD:-60}"
}

timeout() {
	gui awm timeout "${BASH_ARGV[1]}"
}

output() {
	echo "$(icon):$(sanitize <<<"$(text)")"
}

keys() {
	for key in "${!KEYS[@]}"; do
		echo "$key:${KEYS[$key]}"
	done
}

main() {
	case $# in
	0) # list widgets
		readarray -t widgets < <(realpath -s $MODULES_DIR/*)
		readarray -t widgets < <(basename -a "${widgets[@]}")
		for w in "${widgets[@]}"; do
			printf "%s:%s\n" "$w" "$(widget "$w" period)"
		done
		;;
	1) # list widget functions
		source "$MODULES_DIR/$1" || exit 1
		declare -F | awk '{print $3}'
		;;
	*) # call widget functions
		source "$MODULES_DIR/$1" || exit 1
		"${@:2}"
		# if KEYS[prev] exists, then we should timeout the widget
		if [[ -n "${KEYS[$2]}" ]]; then
			timeout
		fi
		;;
	esac
}

main "$@"
