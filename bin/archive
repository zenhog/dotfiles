#!/usr/bin/env bash

source "$HOME/.bin/utils"

function format() {
  sepline '*' "$TAR_FILENAME"
  cat -v
}

function create() {
  local src dst

  read -r -a src < <(path "$1")
  read -r -a dst < <(path "$2")

  local opts=(
    --create
    --gzip
    --file "${dst:=/dev/stdout}"
    --exclude-vcs-ignores
    --sort=name
  )

  tar "${opts[@]}" -C "${src[1]}" "${src[2]}"
}

function extract() {
  local src opts

  read -r -a src < <(path "$1")

  opts=(
    --extract
    --gzip
    --keep-newer-files
    --preserve-permissions
    --no-same-owner
    --file "${src:-/dev/stdin}"
  )

  opts+=("${extra_opts[@]}")

  local errors=(
    -e 'is newer or samge age'
    -e 'Unexpected inconsistency when making directory'
    -e 'Exiting with failure status due to previous errors'
  )

  tar "${opts[@]}" -C "${src[1]:-$PWD}" 2> >(grep -v "${errors[@]}")
}

function tar_dump() {
  local extra_opts=(--to-command="${BASH_SOURCE[0]} tar_format")
  tar_extract "$@"
}

function tar_list() {
  local src

  read -r -a src < <(path "$1")

  local opts=(
    --list
    --gzip
    --verbose
    --file "${src:-/dev/stdin}"
  )
 
  local lines
  readarray -t lines < <(tar "${opts[@]}")

  for line in "${lines[@]}"; do
    local mode ownership size date time path
    read -r mode ownership size date time path <<< "$line"
    echo "$mode $size $path"
  done
}

function tar_cat() {
  if [[ $# -ne 0 ]]; then
    tar_list "$@"
    tar_dump "$@"
    return
  fi

  local tmp="$(mktemp)"

  cat > "$tmp"

  tar_list < "$tmp"
  tar_dump < "$tmp"

  rm -f "$tmp"
}

function tar_preview() {
  tar_create "$@" | tar_cat
}

function tar_compare() {
  diff <(tar_cat "$1") <(tar_cat "$2")
}

function tar_diff() {
  local dirsrc="$(path "${1?}")"
  local tarsrc="$dirsrc.tar.gz"
  diff <(quiet tar_cat "$tarsrc") <(quiet tar_preview "$dirsrc")
}

function gpgtar_enc() {
  if ! gpgtar_diff "$1"; then
    tar_create "$1" | enc --output "$1.tar.gz.gpg" -
  fi
}

function gpgtar_dec() {
  dec --output - "$1" | tar_extract
}

function gpgtar_diff() {
  local dirsrc="${1?}"
  local tarsrc="$dirsrc.tar.gz.gpg"

  silent diff <(dec --output - "$tarsrc" | tar_cat) <(tar_preview "$dirsrc")
}

function gpgtar_cat() {
  dec --output - "$1" | tar_cat
}
