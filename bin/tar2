#!/usr/bin/env bash

source "$HOME/.bin/utils"

function format() {
  sepline '*' "$TAR_FILENAME"
  cat -v
}

function passphrase() {
  declare -g PASSPHRASE
  local token="$HOME/.password-store/tokens/main.gpg"

  if [[ -z "$PASSPHRASE" ]]; then
    if [[ -z "$PROMPTPASS" ]]; then
      read -r PASSPHRASE < <(gpg --batch --pinentry-mode=loopback -qd "$token")
    fi
    [[ -z "$PASSPHRASE" ]] && read -r -p 'Passphrase: ' PASSPHRASE
  fi

  [[ -n "$PASSPHRASE" ]] && echo "$PASSPHRASE"
}

function create() {
  local src dst

  read -r -a src < <(path "$1")
  read -r -a dst < <(path "$2")

  local opts=(
    --create
    --gzip
    --file "${dst:=/dev/stdout}"
    --exclude-vcs-ignores
    --sort=name
  )

  tar "${opts[@]}" -C "${src[1]}" "${src[2]}"
}

function extract() {
  local src opts

  read -r -a src < <(path "$1")

  opts=(
    --extract
    --gzip
    --keep-newer-files
    --preserve-permissions
    --no-same-owner
    --file "${src:-/dev/stdin}"
  )

  opts+=("${extra_opts[@]}")

  local errors=(
    -e 'is newer or samge age'
    -e 'Unexpected inconsistency when making directory'
    -e 'Exiting with failure status due to previous errors'
  )

  coproc FIXERRORS {
    grep -v "${errors[@]}"
  }

  exec 3>&"${FIXERRORS[1]}"
  exec 4>&"${FIXERRORS[0]}"
  exec {FIXERRORS[0]}>&-
  exec {FIXERRORS[1]}>&-

  tar "${opts[@]}" -C "${src[1]:-$PWD}" 2>&3

  exec 3>&-
  cat <&4
  exec 4>&-
  wait "$FIXERRORS_PID"
}

function dump() {
  local extra_opts=(--to-command="${BASH_SOURCE[0]} format")
  extract "$@"
}

function list() {
  local src

  read -r -a src < <(path "$1")

  local opts=(
    --list
    --gzip
    --verbose
    --file "${src:-/dev/stdin}"
  )
 
  local lines
  readarray -t lines < <(tar "${opts[@]}")

  for line in "${lines[@]}"; do
    local mode ownership size date time path
    read -r mode ownership size date time path <<< "$line"
    echo "$mode $size $path"
  done
}

function tarcat() {
  coproc DUMP {
     dump
  }

  exec 3>&"${DUMP[1]}"
  exec 4>&"${DUMP[0]}"

  exec {DUMP[1]}>&-
  exec {DUMP[0]}>&-

  cat "${1:-/dev/stdin}" | tee >(list) >&3

  exec 3>&-
  cat <&4
  exec 4>&-

  wait "$DUMP_PID"
}

function preview() {
  create "$@" | tar cat
}

function _compare() {
  diff <(tar_cat "$1") <(tar_cat "$2")
}

function _diff() {
  local dirsrc="$(path "${1?}")"
  local tarsrc="$dirsrc.tar.gz"
  diff <(quiet tar_cat "$tarsrc") <(quiet tar_preview "$dirsrc")
}

declare -F "_$1" && "_$1" "${@:2}" || tar "$@"
